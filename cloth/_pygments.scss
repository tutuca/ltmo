@charset "UTF-8";
//
// Color scheme for Pygments
//

// By default, we'll use solarized colors
@import "solarized";

// Colors
$base:       $solarized_base1;
$background: $solarized_base03;
$highlight_bg: $solarized_base02;
$background_highlight: $solarized_base02;

$royal_blue: #235388;
$bright_blue: #0e84b5;
$olive:      #517918;

$green:      $solarized_green;
$blue:       $solarized_blue;
$light_blue: $solarized_cyan;
$teal:       $solarized_yellow;
$purple:     $solarized_violet;
$orange:     $solarized_orange;

$error:         $solarized_red;
$deleted:       $solarized_red;
$inserted:      $solarized_green;
$keyword:       $solarized_violet;
$string:        $solarized_green;
$number:        $solarized_yellow;
$function_name: $solarized_magenta;
$heading:       $solarized_orange;
$variable:      $solarized_orange;
$attribute:     $solarized_yellow;
$name:          $solarized_blue;
$namespace:     $solarized_blue;
$comment:       $solarized_cyan;
$whitespace:    $solarized_base1;
$output:        $solarized_base0;
$operator:      $solarized_base00;
$decorator:     $solarized_base01;

.codehilite {
    background-color: $background;
    padding: 0.5em 2em;
    margin: 0 -2em;
    border-radius: 3px;
    .ge { font-style: italic; } // Generic.Emph
    .gs { font-weight: bold; } // Generic.Strong

    .hll { background-color: $background_highlight } // Highlighted lines

    .err { border: 1px solid $error } // Error
    .gr  { color: $error } // Generic.Error

    .gd { color: $deleted } // Generic.Deleted
    .gi { color: $inserted; } // Generic.Inserted

    .o, .p { color: $operator } // Operator
    .go { color: $output } // Generic.Output
    .w  { color: $whitespace } // Text.Whitespace

    // Name.Decorator
    .nd { color: $decorator; font-weight: bold }

    // Comment, Comment.Multiline
    .cm, .c1, .c { color: $comment; font-style: italic }

    // Comment.Special
    .cs { color: $comment; background-color: $background_highlight }

    // Generic.Heading, Name.Tag
    .gh, .nt { color: $heading; font-weight: bold }

    // Name.Function
    .nf { color: $function_name }

    // Literal.Number,
    //   .Float, .Hex, .Integer, .Integer.Long
    .m, .mf, .mh, .mi, .mo, .il  { color: $number }

    // Literal.String
    //   .Backtick, .Char, .Single, .Double, .Heredoc
    .s, .sh, .s2, .s1, .sc, .sb { color: $string }

    // Name.Attribute, Literal.String.Doc, Literal.String.Escape
    .na, .sd, .se { color: $attribute }
    .sd { font-style: italic }
    .se { font-weight: bold }

    // Literal.String.Symbol
    .ss { color: $variable }

    // Literal.String.Interpol
    .si { color: $variable; font-style: italic }

    // Comment.Preproc
    .cp { color: $name }

    // Name.Builtin
    //  .Pseudo, .Exception
    .bp, .nb, .ne { color: $name }
    .ow { color: $name; font-weight: bold } // Operator.Word

    // Name.Namespace, Name.Class, Name.Label
    .nn, .nx, .nc, .nl  { color: $namespace; font-weight: bold; }

    // Keyword
    //  .Constant, .Declaration, .Namespace, .Reserved
    .k, .kc, .kd, .kn, .kr { color: $keyword; font-weight: bold }
    .kp { color: $keyword } // Keyword.Pseudo

    // Name.Entity, Name.Variable
    //  .Class, .Global, .Instance
    .nv, .vc, .vg, .vi, .ni { color: $variable; }
    .ni { font-weight: bold; }

    .gt { color: #0040D0 } // Generic.Traceback
    .sr { color: #235388 } // Literal.String.Regex
    .no { color: #60add5 } // Name.Constant
    .gu { color: #800080; font-weight: bold } // Generic.Subheading
    .kt { color: #902000 } // Keyword.Type
    .sx { color: #c65d09 } // Literal.String.Other
    .gp { color: #c65d09; font-weight: bold } // Generic.Prompt
}
